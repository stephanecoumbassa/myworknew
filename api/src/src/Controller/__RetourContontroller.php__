<?php

namespace App\Controller;

use Symfony\Component\HttpFoundation\Request;
use Symfony\Component\Routing\Annotation\Route;
use Symfony\Component\HttpFoundation\JsonResponse;
use Symfony\Bundle\FrameworkBundle\Controller\AbstractController;

class RetourController extends AbstractController
{

  /**
   * @Route("/my/get/retour", name="retour_get")
   */
  public function retour_get(Request $request)
  {
    $em = $this->getDoctrine();
    $var = $em->getConnection()->prepare('SELECT * FROM s_retours WHERE id_magasin = ?');
    $var->execute([$this->getUser()->getShopId()]);
    $res = $var->fetchAll();
    $res = json_decode(json_encode($res, JSON_NUMERIC_CHECK), true);
    return new JsonResponse($res);
  }

  /**
   * @Route("/my/get/retour_factures_id", name="factures_get")
   */
  public function facture_get(Request $request)
  {
    $em = $this->getDoctrine();
    $var = $em->getConnection()->prepare("SELECT DISTINCT id_vente facture, 'vente' type, id_magasin from s_retours
                                               WHERE id_magasin = ? AND type = 'vente' ORDER BY facture DESC;");
    $var->execute([$this->getUser()->getShopId()]);
    $res = $var->fetchAll();
    $res = json_decode(json_encode($res, JSON_NUMERIC_CHECK), true);
    return new JsonResponse($res);
  }

  /**
   * @Route("/my/get/retour_by_facture", name="retour_factures_get")
   */
  public function facture_get_by_id(Request $request)
  {
    $id_vente = $_GET['id_vente'];
    $em = $this->getDoctrine();
    $var = $em->getConnection()->prepare("SELECT * from s_retours
                                                where id_magasin = ? AND id_vente = ? AND type = 'vente' ORDER BY id_vente");
    $var->execute([$this->getUser()->getShopId(), $id_vente]);
    $res = $var->fetchAll();
    $res = json_decode(json_encode($res, JSON_NUMERIC_CHECK), true);
    return new JsonResponse($res);
  }

  /**
   * @Route("/my/get/retour_by_idvente", name="retour_factures_get2")
   */
  public function facture_get_by_id2(Request $request)
  {
    $id_vente = $_GET['id_vente'];
    $em = $this->getDoctrine();
    $var = $em->getConnection()->prepare("CALL __retour_by_idvente(?, ?)");
    $var->execute([ $id_vente, $this->getUser()->getShopId() ]);
    $res = $var->fetchAll();
    $res = json_decode(json_encode($res, JSON_NUMERIC_CHECK), true);
    return new JsonResponse($res);
  }

  /**
   * @Route("/my/get/retour_by_credit", name="retour_factures_credit_get")
   */
  public function facture_credit(Request $request)
  {
    $idmagasin =$this->getUser()->getShopId();
    $id_vente = $_GET['id_vente'];
    $em = $this->getDoctrine();
    $var = $em->getConnection()->prepare('SELECT * from s_credit where factureid = ? AND id_magasin = ? ORDER BY id DESC');
    $var->execute([$id_vente, $idmagasin]);
    $res = $var->fetchAll();
    $res = json_decode(json_encode($res, JSON_NUMERIC_CHECK), true);
    return new JsonResponse($res);
  }

  /**
   * @Route("/my/get/facture_number", name="factures_number_get")
   */
  public function facture_number(Request $request)
  {
    $em = $this->getDoctrine();
    $var = $em->getConnection()->prepare('SELECT id_vente+1 as nb from s_ventes
                                        WHERE id_magasin = ? ORDER BY id_vente desc limit 1');
    $var->execute([$this->getUser()->getShopId()]);
    $res = $var->fetch();
    $res = json_decode(json_encode($res, JSON_NUMERIC_CHECK), true);

    return new JsonResponse($res);
  }

  /**
   * @Route("/my/post/retour", name="retour_post")
   */
  public function commands_register(Request $request)
  {
    $data = json_decode($request->getContent(),true);
    $em = $this->getDoctrine();
    $agent = $this->getUser()->getId();
    $shop_id = $this->getUser()->getShopId();
    $code_vente = 'RV-'.date("ymd-his", time());
    $products = $data['products'];

    $count = count($products);
    for ($i=0; $i<$count; $i++) {
      $pid = $products[$i]['p']['id'];
      $qty = $products[$i]['quantity'];
      $sell = $products[$i]['p']['sales_price'];
      $tva = $products[$i]['p']['tva'];
      $var = $em->getConnection()->prepare('INSERT INTO s_retours
        (user_id, product_id, quantite, prix_unitaire, tva, id_vente, type, id_magasin) VALUES (?, ?, ? ,?, ?, ?, ?, ?);');
      $var->execute([$agent, $pid , $qty, $sell, $tva, $code_vente, 'vente', $shop_id]);
      $res = $var->fetch();
    }
    $res['factureid'] = $code_vente;
    return new JsonResponse($res);
  }




  /**
   * @Route("/my/put/retour", name="retour_put")
   */
  public function retour_update(Request $request){
    $data = json_decode($request->getContent(),true);
    $em = $this->getDoctrine();
    $var = $em->getConnection()->prepare('UPDATE s_retours
        SET quantite = ?, prix_unitaire = ?, prix_ttc = ?, product_id = ? WHERE id = ? AND id_magasin = ? ORDER BY id DESC');
    $var->execute([$data['quantite'], $data['prix_unitaire'], $data['prix_ttc']??null, $data['product_id'], $data['id'], $this->getUser()->getShopId() ]);
    return new JsonResponse(["msg"=>"Modifié avec succès", "status"=>1]);
  }

//  /**
//   * @Route("/my/put/retour", name="retour_put")
//   */
//  public function retour_update(Request $request){
//    $data = json_decode($request->getContent(),true);
//    $em = $this->getDoctrine();
//    $var = $em->getConnection()->prepare('UPDATE s_ventes SET retour = ?, motif = ? WHERE id = ? AND id_magasin = ?;');
//    $var->execute([$data['retour'], $data['motif'], $data['id'], $this->getUser()->getShopId() ]);
//    return new JsonResponse(["msg"=>"Modifié avec succès", "status"=>1]);
//  }

  /**
   * @Route("/api/post/user_command", name="user_command_post")
   */
  public function commands_user(Request $request)
  {
    $data = json_decode($request->getContent(), true);
    $em = $this->getDoctrine();
    $shopid = $data['shopid'] ?? 1;
    $telephone = $data['telephone'] ?? null;
    $userid = $data['user'] ?? null;
    $email = $data['email'] ?? null;
    $name = $data['name'] ?? null;
    $cmdeid = uniqid();
    $products = $data['products'];

    $count = count($products);
    for ($i=0; $i<$count; $i++){
      $pid = $products[$i]['id'];
      $qty = $products[$i]['qty'];
      $var = $em->getConnection()->prepare('CALL __cmde_client_register(?, ?, ? ,?, ?, ?, ?, ?);');
      $var->execute([$pid, $userid, $qty, $cmdeid, $shopid, $telephone, $email, $name]);
      $res = $var->fetch();
    }
    return new JsonResponse($res);
  }

  /**
   * @Route("/my/get/command", name="command_list_get")
   */
  public function command_get(Request $request)
  {
    $em = $this->getDoctrine();
    $var = $em->getConnection()->prepare('SELECT * FROM s_cmde_product
        LEFT JOIN s_product ON s_product.id = s_cmde_product.product_id where s_cmde_product.id_magasin = ?;');
    $var->execute([$this->getUser()->getShopId()]);
    $res = $var->fetchAll();
    $res = json_decode(json_encode($res, JSON_NUMERIC_CHECK), true);

    return new JsonResponse($res);
  }

  /**
   * @Route("/my/delete/retour", name="retour_delete")
   */
  public function retour_delete(Request $request)
  {
    $data = json_decode($request->getContent(), true);
    $shopid = $this->getUser()->getShopId();
    $em = $this->getDoctrine();
    $var = $em->getConnection()->prepare('DELETE FROM s_ventes WHERE id = ? AND id_magasin = ?;');
    $var->execute([$data['id'], $shopid]);
    return new JsonResponse(["msg"=>"supprimé avec succès", "status"=>1]);
  }


  /**
   * @Route("/my/delete/retour_all", name="retour_delete_all")
   */
  public function retour_delete_all(Request $request)
  {
    $data = json_decode($request->getContent(), true);
    $factureid = $data['factureid'];
    $shopid = $this->getUser()->getShopId();
    $em = $this->getDoctrine();
    $var = $em->getConnection()->prepare('DELETE FROM s_ventes where id_vente = ? AND id_magasin = ?;');
    $var->execute([ $factureid, $shopid ]); $var->closeCursor();
    $var = $em->getConnection()->prepare("DELETE FROM s_credit where factureid = ? AND id_magasin = ? AND type = 'vente';");
    $var->execute([ $factureid, $shopid ]); $var->closeCursor();
    return new JsonResponse(["msg"=>"supprimé avec succès", "status"=>1]);
  }

}
